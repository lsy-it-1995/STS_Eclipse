package com.appsdeveloperblog.app.ws.shared.dto;

import java.security.SecureRandom;
import java.util.Date;
import java.util.Random;

import org.springframework.stereotype.Component;

import com.appsdeveloperblog.app.ws.security.SecurityConstants;

import io.jsonwebtoken.Claims;
import io.jsonwebtoken.Jwts;

@Component
public class Utils {
	
	private final Random RANDOM = new SecureRandom();
	private final String ALPHABET = "0123456789zxcvbnmasdfghjklqwertyuiopZXCVBNMASDFGHJKLQWERTYUIOP";
	
	public String generateUserId(int length) {
		return generateRandomString(length);
	}
	public String generateAddressId(int length) {
		return generateRandomString(length);
	}
	public String generateRandomString(int length) {
		StringBuilder sb = new StringBuilder(length);
		for(int i = 0; i < length; i++) {
			sb.append(ALPHABET.charAt(RANDOM.nextInt(ALPHABET.length())));
		}
		return sb.toString();
	}
	public boolean hasTokenExpired(String token) {
		Claims claims = Jwts.parser()
							.setSigningKey(SecurityConstants.getTokenSecret())
							.parseClaimsJws(token).getBody();
		Date tokenExpirationDate = claims.getExpiration();
		Date today = new Date();
		return tokenExpirationDate.before(today);
	}
}
